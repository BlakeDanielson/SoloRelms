"""add_quest_and_journal_models_v2

Revision ID: ee849f9d15e3
Revises: da4fb3102ac2
Create Date: 2025-05-25 09:18:58.845940

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ee849f9d15e3'
down_revision: Union[str, None] = 'da4fb3102ac2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('quest_type', sa.Enum('main', 'side', 'daily', 'hidden', name='questtype'), nullable=False),
    sa.Column('difficulty_level', sa.Enum('easy', 'medium', 'hard', 'legendary', name='difficultylevel'), nullable=False),
    sa.Column('required_level', sa.Integer(), nullable=False),
    sa.Column('time_limit_hours', sa.Integer(), nullable=True),
    sa.Column('prerequisite_quest_ids', sa.JSON(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('giver_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_repeatable', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quests_id'), 'quests', ['id'], unique=False)
    op.create_table('quest_objectives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('objective_type', sa.Enum('kill', 'collect', 'visit', 'talk', 'deliver', 'explore', 'survive', name='objectivetype'), nullable=False),
    sa.Column('target_type', sa.String(length=100), nullable=True),
    sa.Column('target_id', sa.String(length=100), nullable=True),
    sa.Column('required_amount', sa.Integer(), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quest_objectives_id'), 'quest_objectives', ['id'], unique=False)
    op.create_table('quest_rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reward_type', sa.Enum('xp', 'gold', 'item', 'ability', name='rewardtype'), nullable=False),
    sa.Column('reward_id', sa.String(length=100), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('rarity', sa.String(length=50), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quest_rewards_id'), 'quest_rewards', ['id'], unique=False)
    op.create_table('character_quests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('active', 'completed', 'failed', 'abandoned', name='queststatus'), nullable=False),
    sa.Column('accepted_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_character_quests_id'), 'character_quests', ['id'], unique=False)
    op.create_table('discoveries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('discovery_type', sa.String(length=50), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('discovered_at', sa.DateTime(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discoveries_id'), 'discoveries', ['id'], unique=False)
    op.create_table('journal_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('entry_type', sa.String(length=50), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('important', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_journal_entries_id'), 'journal_entries', ['id'], unique=False)
    op.create_table('timeline_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('participants', sa.JSON(), nullable=True),
    sa.Column('consequences', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timeline_events_id'), 'timeline_events', ['id'], unique=False)
    op.create_table('quest_objective_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('current_amount', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('character_quest_id', sa.Integer(), nullable=False),
    sa.Column('objective_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_quest_id'], ['character_quests.id'], ),
    sa.ForeignKeyConstraint(['objective_id'], ['quest_objectives.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quest_objective_progress_id'), 'quest_objective_progress', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quest_objective_progress_id'), table_name='quest_objective_progress')
    op.drop_table('quest_objective_progress')
    op.drop_index(op.f('ix_timeline_events_id'), table_name='timeline_events')
    op.drop_table('timeline_events')
    op.drop_index(op.f('ix_journal_entries_id'), table_name='journal_entries')
    op.drop_table('journal_entries')
    op.drop_index(op.f('ix_discoveries_id'), table_name='discoveries')
    op.drop_table('discoveries')
    op.drop_index(op.f('ix_character_quests_id'), table_name='character_quests')
    op.drop_table('character_quests')
    op.drop_index(op.f('ix_quest_rewards_id'), table_name='quest_rewards')
    op.drop_table('quest_rewards')
    op.drop_index(op.f('ix_quest_objectives_id'), table_name='quest_objectives')
    op.drop_table('quest_objectives')
    op.drop_index(op.f('ix_quests_id'), table_name='quests')
    op.drop_table('quests')
    # ### end Alembic commands ###
